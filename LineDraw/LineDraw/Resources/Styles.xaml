<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:LineDraw.Converters"
                    xmlns:mod="clr-namespace:LineDraw.Models"
                    xmlns:ext="clr-namespace:LineDraw.External">
    <!-- Brushes -->
    <Color x:Key="DisplayForegroundColor">#FF9BCA26</Color>
    <Color x:Key="DisplayForegroundGlowColor">#FFDEFB90</Color>
    <RadialGradientBrush x:Key="DisplayBackgroundBrush" RadiusX="0.65" RadiusY="0.8" Center="0.5,0.5" GradientOrigin="0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#FF003F00" Offset="0.306977"/>
            <GradientStop Color="#FF003200" Offset="0.549037"/>
            <GradientStop Color="#FF002600" Offset="0.70"/>
            <GradientStop Color="#FF001900" Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="DisplayForegroundBrush" Color="{StaticResource DisplayForegroundColor}" />
    <SolidColorBrush x:Key="DisplayForegroundGlowBrush" Color="{StaticResource DisplayForegroundGlowColor}" />
    <LinearGradientBrush x:Key="MainBackgroundBorderBrush" EndPoint="0,0" StartPoint="1,1">
        <GradientStop Color="#FFA8ACB6"/>
        <GradientStop Color="#FF747C8D" Offset="0.5"/>
        <GradientStop Color="#FF464646" Offset="0.5"/>
        <GradientStop Color="#FF191919" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MainBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF262D26" Offset="0.25431"/>
            <GradientStop Color="#FF434943" Offset="0.467381"/>
            <GradientStop Color="#FF616561" Offset="0.508621"/>
            <GradientStop Color="#FFA4A6A4" Offset="0.549261"/>
            <GradientStop Color="#FFE7E7E7" Offset="0.560345"/>
            <GradientStop Color="#FFABADAB" Offset="0.571552"/>
            <GradientStop Color="#FF707470" Offset="0.616379"/>
            <GradientStop Color="#FF4B504B" Offset="0.646329"/>
            <GradientStop Color="#FF262D26" Offset="0.75"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MainForegroundBrush" Color="White" />

    <!-- Converters -->
    <conv:PointsConverter x:Key="PointsConverter" />
    <conv:EnumToBooleanConverter x:Key="EnumToBoolConverter" />

    <!-- Display border brush style-->
    <Style TargetType="{x:Type Border}" x:Key="DisplayBorderStyle">
        <Setter Property="BorderBrush" Value="{StaticResource MainBackgroundBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <!-- Display TextBlock style -->
    <Style TargetType="{x:Type TextBlock}" x:Key="DisplayTextBlockStyle">
        <Setter Property="FontFamily" Value="pack://application:,,,/LineDraw;component/Resources/#digital-7" />
        <Setter Property="Foreground" Value="{StaticResource DisplayForegroundBrush}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{StaticResource DisplayForegroundGlowColor}"
                                  BlurRadius="3" 
                                  ShadowDepth="0" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock style with shadow-->
    <Style x:Key="ShadowedTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black"
                                          BlurRadius="2" 
                                          ShadowDepth="0" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Data template for lines -->
    <DataTemplate x:Key="LineItemDataTemplate">
        <Polyline Stroke="{StaticResource DisplayForegroundBrush}"                  
                  StrokeThickness="1" 
                  Points="{Binding Mode=OneWay, Converter={StaticResource PointsConverter}}">
            <Polyline.Effect>
                <DropShadowEffect Color="{StaticResource DisplayForegroundGlowColor}"
                                  BlurRadius="5" 
                                  ShadowDepth="0" />
            </Polyline.Effect>
        </Polyline>
    </DataTemplate>

    <!-- Data template for start and end point -->
    <DataTemplate x:Key="PointContentDataTemplate">
        <Canvas>
            <Ellipse Name="StartPoint"
                     Fill="{StaticResource DisplayForegroundBrush}"
                     Height="4"
                     Width="4">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="{Binding DataContext.StartPoint.X, Mode=OneWay,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" 
                                        Y="{Binding DataContext.StartPoint.Y, Mode=OneWay,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <TranslateTransform X="-2" Y="-2"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Effect>
                    <DropShadowEffect Color="{StaticResource DisplayForegroundGlowColor}"
                                  BlurRadius="5" 
                                  ShadowDepth="0" />
                </Ellipse.Effect>
            </Ellipse>
            <Ellipse Name="EndPoint"
                 Fill="{StaticResource DisplayForegroundBrush}"
                 Height="4"
                 Width="4">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="{Binding DataContext.EndPoint.X, Mode=OneWay,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" 
                                        Y="{Binding DataContext.EndPoint.Y, Mode=OneWay,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <TranslateTransform X="-2" Y="-2"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Effect>
                    <DropShadowEffect Color="{StaticResource DisplayForegroundGlowColor}"
                                  BlurRadius="5" 
                                  ShadowDepth="0" />
                </Ellipse.Effect>
            </Ellipse>
        </Canvas>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DataContext.StartPoint, 
                RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                <Setter TargetName="StartPoint" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.EndPoint, 
                RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                <Setter TargetName="EndPoint" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Data template for error message -->
    <DataTemplate x:Key="ErrorMessageDataTemplate">
        <TextBlock Text="{Binding}" 
                   Foreground="Red"
                   FontSize="14"/>
    </DataTemplate>

    <!-- Data template for pathfinding algorithm-->
    <DataTemplate x:Key="PathAlgorithmDataTemplate">
        <StackPanel Orientation="Horizontal" SnapsToDevicePixels="False">
            <RadioButton Foreground="{StaticResource MainForegroundBrush}"
                         IsChecked="{Binding Path=DataContext.PathAlgorithm,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                Converter={StaticResource EnumToBoolConverter}, 
                ConverterParameter={x:Static mod:PathAlgorithm.AStar}}">
                <TextBlock Text="A*"
                           Style="{StaticResource ShadowedTextBlockStyle}" />
            </RadioButton>
            <RadioButton Foreground="{StaticResource MainForegroundBrush}"
                         IsChecked="{Binding Path=DataContext.PathAlgorithm,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                Converter={StaticResource EnumToBoolConverter}, 
                ConverterParameter={x:Static mod:PathAlgorithm.BFS}}">
                <TextBlock Text="BFS"
                           Style="{StaticResource ShadowedTextBlockStyle}" />
            </RadioButton>
            <RadioButton Foreground="{StaticResource MainForegroundBrush}"
                         IsChecked="{Binding Path=DataContext.PathAlgorithm,
                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                Converter={StaticResource EnumToBoolConverter}, 
                ConverterParameter={x:Static mod:PathAlgorithm.Dijkstra}}">
                <TextBlock Text="Dijkstra's"
                           Style="{StaticResource ShadowedTextBlockStyle}" />
            </RadioButton>
        </StackPanel>
    </DataTemplate>

    <!-- Data template for message display -->
    <DataTemplate x:Key="MessageDisplayDataTemplate">
        <Border Background="{StaticResource DisplayBackgroundBrush}"
                Style="{StaticResource DisplayBorderStyle}"
                Height="150" 
                Width="150"
                Padding="5">
            <Grid>
                <!--Message field-->
                <TextBlock Text="{Binding ErrorMessage}"
                           DockPanel.Dock="Top"
                           HorizontalAlignment="Left"
                           Style="{StaticResource DisplayTextBlockStyle}"
                           TextWrapping="Wrap"/>
                <!--Time feedback-->
                <StackPanel HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                    <TextBlock Name="TimeLabel"
                               Text="TIME: "
                               Style="{StaticResource DisplayTextBlockStyle}"/>
                    <TextBlock Text="{Binding TimeMessage}"
                           Style="{StaticResource DisplayTextBlockStyle}"/>
                </StackPanel>
                <!-- Status indicator-->
                <StackPanel HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            ext:StateManager.VisualStateProperty="{Binding State}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="{x:Static mod:CanvasState.GroupName}">
                            <VisualStateGroup.Transitions>
                                <VisualTransition GeneratedDuration="00:00:01">
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState Name="{x:Static mod:CanvasState.ErrorState}">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Indicator" 
                                                     Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                     To="0" />
                                </Storyboard>
                            </VisualState>
                            <VisualState Name="{x:Static mod:CanvasState.BusyState}">
                            </VisualState>
                            <VisualState Name="{x:Static mod:CanvasState.ReadyState}">
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Ellipse Name="Indicator" 
                             Height="7" 
                             Width="7"
                             Fill="{StaticResource DisplayForegroundBrush}"
                             Margin="2">
                        <Ellipse.Effect>
                            <DropShadowEffect Color="{StaticResource DisplayForegroundGlowColor}"
                                          BlurRadius="5" 
                                          ShadowDepth="0" />
                        </Ellipse.Effect>                        
                    </Ellipse>
                </StackPanel>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>